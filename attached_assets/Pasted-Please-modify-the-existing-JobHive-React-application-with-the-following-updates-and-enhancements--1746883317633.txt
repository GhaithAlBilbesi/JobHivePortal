Please modify the existing JobHive React application with the following updates and enhancements:

1. 🐝 **Hero Section Update**:
   - Remove the animated bees (images or GIFs) and replace them with this emoji version: 🐝
   - Animate the 🐝 emojis to **fly and move around the hero title**: "Sweet opportunities for the NewBees!"
   - Keep it subtle, playful, and looped. Use simple CSS or JS animation.

2. 👥 **User Roles Functionality**:
   - Implement clear UX for 3 user roles:
     - **Student/Jobseeker**: can apply to jobs, save jobs, use the resume builder, message employers, and edit their own profile. They **cannot** post jobs.
     - **Employer**: can post jobs, view and review applications, message applicants, and edit their **company profile** only.
     - **Admin**: full control (users, jobs, messaging, dashboards, analytics, etc.)

3. 📊 **Dashboards**:
   - Add a **Dashboard Page** for each role (Student, Employer, Admin) with relevant analytics:
     - Student: applications count, saved jobs, resume completeness
     - Employer: posted jobs, number of applicants, views per post
     - Admin: total users, job stats, system insights

4. 🔐 **Navbar Logic**:
   - If user is **not signed in**, navbar should **only show**: `Home` and `Jobs`
   - Remove sections like “Success Stories”, “Pricing”, and “For Employers”

5. ✏️ **New Feature Requirements**:
   - Add a **job filtering section** (left sidebar or top section on the job listing page) to filter by:
     - Job type (internship, part-time, full-time)
     - Skills (tags)
     - Location
     - Industry

6. 🔑 **Authentication Flow**:
   - When a **user tries to apply to a job**, check if they’re signed in. If not, prompt them to **Sign In / Register first**.

7. 📧 **Mock Emails for Testing Roles**:
   - Add support for testing with these mock emails and prefilled roles:
     - `student@jobhive.com` → Role: Student
     - `employer@jobhive.com` → Role: Employer
     - `admin@jobhive.com` → Role: Admin

🛠 Tech Note:
- Keep using only **HTML, CSS, JS, and React** (no Tailwind or Bootstrap)
- Use CSS for animations
- Maintain clean, modular, human-readable code
- All components should be commented to explain their role and logic
